angular.module("ionic.service.core",[]).provider("persistentStorage",function(){return{$get:["$q","$window",function($q,$window){var objectCache={};var memoryLocks={};var persistenceStrategy={get:function(key){return $window.localStorage.getItem(key)},remove:function(key){return $window.localStorage.removeItem(key)},set:function(key,value){return $window.localStorage.setItem(key,value)}};return{storeObject:function(key,object){var json=JSON.stringify(object);persistenceStrategy.set(key,json);objectCache[key]=object},retrieveObject:function(key){var cached=objectCache[key];if(cached){return cached}var json=persistenceStrategy.get(key);if(json==null){return null}try{return JSON.parse(json)}catch(err){return null}},lockedAsyncCall:function(lockKey,asyncFunction){var deferred=$q.defer();if(memoryLocks[lockKey]){deferred.reject("in_progress");return deferred.promise}if(persistenceStrategy.get(lockKey)==="locked"){deferred.reject("last_call_interrupted");deferred.promise.then(null,function(){persistenceStrategy.remove(lockKey)});return deferred.promise}memoryLocks[lockKey]=true;persistenceStrategy.set(lockKey,"locked");asyncFunction().then(function(successData){deferred.resolve(successData);delete memoryLocks[lockKey];persistenceStrategy.remove(lockKey)},function(errorData){deferred.reject(errorData);delete memoryLocks[lockKey];persistenceStrategy.remove(lockKey)},function(notifyData){deferred.notify(notifyData)});return deferred.promise}}}]}}).provider("$ionicApp",["$httpProvider",function($httpProvider){var app={};var settings={api_server:"https://apps.ionic.io",push_api_server:"https://push.ionic.io",analytics_api_server:"https://analytics.ionic.io"};var _is_cordova_available=function(){console.log("Ionic Core: searching for cordova.js");try{if(window.cordova||cordova){console.log("Ionic Core: cordova.js has already been loaded");return true}}catch(e){}var scripts=document.getElementsByTagName("script");var len=scripts.length;for(var i=0;i<len;i++){var script=scripts[i].getAttribute("src");if(script){var parts=script.split("/");var partsLength=0;try{partsLength=parts.length;if(parts[partsLength-1]==="cordova.js"){console.log("Ionic Core: cordova.js has previously been included.");return true}}catch(e){}}}return false};this.identify=function(opts){if(!opts.gcm_id){opts.gcm_id="None"}app=opts};this.set=function(k,v){settings[k]=v};this.setApiServer=function(server){settings.api_server=server};this.$get=[function(){return{getId:function(){return app.app_id},getGcmId:function(){return app.gcm_id},getValue:function(k){return settings[k]},getApiUrl:function(){return this.getValue("api_server")},getApiKey:function(){return app.api_key},getApiEndpoint:function(service){var app=this.getApp();if(!app)return null;return this.getApiUrl()+"/api/v1/"+app.app_id+"/"+service},getApp:function(){return app},getDeviceTypeByNavigator:function(){return navigator.userAgent.match(/iPad/i)=="iPad"?"ipad":navigator.userAgent.match(/iPhone/i)=="iPhone"?"iphone":navigator.userAgent.match(/Android/i)=="Android"?"android":navigator.userAgent.match(/BlackBerry/i)=="BlackBerry"?"blackberry":"unknown"},loadCordova:function(){if(!_is_cordova_available()){var cordova_script=document.createElement("script");var cordova_src="cordova.js";switch(this.getDeviceTypeByNavigator()){case"android":if(window.location.href.substring(0,4)==="file"){cordova_src="file:///android_asset/www/cordova.js"}break;case"ipad":case"iphone":try{var resource=window.location.search.match(/cordova_js_bootstrap_resource=(.*?)(&|#|$)/i);if(resource){cordova_src=decodeURI(resource[1])}}catch(e){console.log("Could not find cordova_js_bootstrap_resource query param");console.log(e)}break;case"unknown":return false;default:break}cordova_script.setAttribute("src",cordova_src);document.head.appendChild(cordova_script);console.log("Ionic Core: injecting cordova.js")}},bootstrap:function(){this.loadCordova()}}}]}]).factory("$ionicUser",["$q","$timeout","$http","persistentStorage","$ionicApp",function($q,$timeout,$http,persistentStorage,$ionicApp){var storageKeyName="ionic_analytics_user_"+$ionicApp.getApp().app_id,user=persistentStorage.retrieveObject(storageKeyName)||{},deviceCordova=ionic.Platform.device(),device={screen_width:window.innerWidth*(window.devicePixelRatio||1),screen_height:window.innerHeight*(window.devicePixelRatio||1)};if(deviceCordova.model)device.model=deviceCordova.model;if(deviceCordova.platform)device.platform=deviceCordova.platform;if(deviceCordova.version)device.version=deviceCordova.version;if(deviceCordova.uuid)device.uuid=deviceCordova.uuid;var dirty=false;dirty=storeOrDirty("is_on_device",ionic.Platform.isWebView());dirty=storeOrDirty("device",device);if(!user._id){user._id=generateGuid();dirty=true}if(dirty){persistentStorage.storeObject(storageKeyName,user)}function generateGuid(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=="x"?r:r&3|8;return v.toString(16)})}function storeOrDirty(key,value){if(!angular.equals(user[key],value)){user[key]=value;return true}return false}return{_op:function(key,value,type){var u=user.user_id;if(!u){throw new Error("Please call identify with a user_id before calling push")}var o={};o["user_id"]=u;o[key]=value;return $http.post($ionicApp.getApiUrl()+"/api/v1/app/"+$ionicApp.getId()+"/users/"+type,o)},push:function(key,value,isUnique){if(isUnique){return this._op(key,value,"pushUnique")}else{return this._op(key,value,"push")}},pull:function(key,value){return this._op(key,value,"pull")},set:function(key,value){return this._op(key,value,"set")},unset:function(key){return this._op(key,"","unset")},generateGUID:function(){return generateGuid()},identify:function(userData){if(!userData.user_id){var msg="You must supply a unique user_id field.";throw new Error(msg)}angular.extend(user,userData);persistentStorage.storeObject(storageKeyName,user);return $http.post($ionicApp.getApiUrl()+"/api/v1/app/"+$ionicApp.getId()+"/users/identify",userData)},identifyAnonymous:function(){userData={};userData["user_id"]=generateGuid();userData["isAnonymous"]=true;angular.extend(user,userData);persistentStorage.storeObject(storageKeyName,user);return $http.post($ionicApp.getApiUrl()+"/api/v1/app/"+$ionicApp.getId()+"/users/identify",userData)},get:function(){return user}}}]).run(["$ionicApp",function($ionicApp){console.log("Ionic Core: init");$ionicApp.bootstrap()}]);