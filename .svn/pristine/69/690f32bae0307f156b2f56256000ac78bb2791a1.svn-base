appContext.controller("ContactEditController",["$scope","$state","$filter","ContactsService","LoadingService","$ionicPlatform","$cordovaSQLite","$stateParams","$rootScope","cameraService","$ionicHistory","ConnectionService","SynchroServices","$cordovaKeyboard","MenuService","$ionicViewSwitcher",function($scope,$state,$filter,ContactsService,LoadingService,$ionicPlatform,$cordovaSQLite,$stateParams,$rootScope,cameraService,$ionicHistory,ConnectionService,SynchroServices,$cordovaKeyboard,MenuService,$ionicViewSwitcher){$scope.showLast=false;$scope.tmp=false;$scope.isFocusable=false;var tmpContact={};var db=null;$ionicPlatform.ready(function(){if(window.cordova){db=$cordovaSQLite.openDB("buzcard.db")}else{db=window.openDatabase("buzcard.db","1","my",1024*1024*10)}});$scope.$on("$ionicView.beforeEnter",function(scopes,states){getContact()});function getContact(){ContactsService.selectAllGroup(db,function(result){$scope.groups=new Array;for(var i=0;i<result.rows.length;i++){$scope.groups[i]=result.rows.item(i).name}$scope.groups[$scope.groups.length]="Nouveau Groupe"});ContactsService.getContactbyId(db,$stateParams.id,function(result){if(result.rows.length>0){$rootScope.tmpContact=angular.copy(result.rows.item(0));console.warn($rootScope.tmpContact);tmpContact=angular.copy(result.rows.item(0));$scope.contact=result.rows.item(0);$scope.contact.last_name=removeSlashes(result.rows.item(0).last_name);$scope.contact.first_name=removeSlashes(result.rows.item(0).first_name);$scope.contact.company=removeSlashes(result.rows.item(0).company);$scope.contact.list=removeSlashes(result.rows.item(0).list);$scope.contact.comment=removeSlashes(result.rows.item(0).comment);document.querySelector("#newGroupeName").value=removeSlashes(result.rows.item(0).list);$rootScope.oldGroupName=removeSlashes(result.rows.item(0).list);$scope.contact.lastsendemail=result.rows.item(0).lastsendemail;if(result.rows.item(0).lastsendemail!="")$scope.showLast=true;$scope.photoProfil=result.rows.item(0).photofilelocation;var picker=$("#dateX").pickadate("picker");$scope.contact.rendez_vous=$filter("date")(new Date(result.rows.item(0).rendez_vous*1e3),"dd/MM/yyyy");picker.set("select",new Date(result.rows.item(0).rendez_vous*1e3));picker.set("view",new Date(result.rows.item(0).rendez_vous*1e3));picker.set("highlight",new Date(result.rows.item(0).rendez_vous*1e3));if($scope.contact.rendez_vous=="1900-01-01"||$scope.contact.rendez_vous=="1970-01-01"){$scope.contact.rendez_vous=""}$scope.tmp=true}else{$state.go("app.contactList")}});LoadingService.dismiss()}$scope.updateRDV=function(){};$scope.updateContact=function(contact){contact.rendez_vous=$("#dateX").val();if(document.querySelector("#newGroupeName").value==""&&$scope.contact.list=="Nouveau Groupe"){LoadingService.error("Veuillez introduire un <br> nouveau nom du groupe","ContactEditController")}else if(document.querySelector("#newGroupeName").value==""&&$scope.contact.list!="Nouveau Groupe"&&$scope.contact.list!=""&&$scope.contact.list!=null){LoadingService.error("Veuillez introduire un nom du groupe","ContactEditController")}else{var contactObj={};for(var key in contact)contactObj[key]=removeSlashes(contact[key]);var contactId=contact.id;var oldName=contactObj.list;var newName=document.querySelector("#newGroupeName").value;contactObj.list=newName;console.warn("mmmm");console.warn(contactObj);try{contactObj.rendez_vous=toUsFormat(contact.rendez_vous);if($scope.contact.list=="Nouveau Groupe"&&!checkIfExist(newName,$scope.groups)){ContactsService.updateContactInfo(db,contactObj,function(){ContactsService.insertIntoGroupTable(db,newName,function(){ContactsService.selectContactByGroupName(db,$rootScope.oldGroupName,function(result){if(result.rows.length==0){ContactsService.deleteGroupByName(db,$rootScope.oldGroupName,function(result){})}})})})}else if(oldName!="Nouveau Groupe"&&oldName!=newName&&newName!=""){ContactsService.updateContactInfo(db,contactObj,function(){ContactsService.editGroup(db,oldName,newName,function(result){ContactsService.renameContactGroup(db,oldName,newName,function(result){})})})}else if($scope.contact.list=="Nouveau Groupe"&&checkIfExist(newName,$scope.groups)){LoadingService.error("Ce nom de groupe existe déjà","ContactEditController")}else if(oldName!="Nouveau Groupe"&&(newName==""&&oldName==null||newName==oldName)){ContactsService.updateContactInfo(db,contactObj,function(){ContactsService.selectContactByGroupName(db,$rootScope.oldGroupName,function(result){if(result.rows.length==0){ContactsService.deleteGroupByName(db,$rootScope.oldGroupName,function(result){})}})})}}catch(e){}ConnectionService.isConnected(db,function(){LoadingService.loading("Enregistrement du contact en cours...");if($scope.contact.list=="Nouveau Groupe"&&!checkIfExist(newName,$scope.groups)){var contactObjx={};for(var key in tmpContact)if(contact[key]!=tmpContact[key])contactObjx[key]=contact[key];contactObjx.list=newName;delete contactObjx.rendez_vous;delete contactObjx.id;delete contactObjx.date;if(!isEmpty(contactObjx)){ContactsService.updateContactServer(0,contactId,contactObjx,function(data){if(data.update.status=="done"){LoadingService.dismiss();console.info($rootScope.tmpContact);if(!areTheSame($rootScope.tmpContact,contact))MenuService.setLocalStorage("ReloadContactList",1);$ionicViewSwitcher.nextDirection("back");$state.go("app.contactShow",{id:contactId},{reload:true})}else{LoadingService.error("Une erreur est survenue lors <br> de la synchronisation","ContactEditController")}},function(status){console.error(status);LoadingService.error("Une erreur réseau est survenue ","ContactEditController")})}else{LoadingService.dismiss();console.info($rootScope.contactTmp);if(!areTheSame($rootScope.tmpContact,contact))MenuService.setLocalStorage("ReloadContactList",1);$ionicViewSwitcher.nextDirection("back");$state.go("app.contactShow",{id:contactId},{reload:true})}}else if(oldName!="Nouveau Groupe"&&oldName!=newName&&newName!=""){ContactsService.updateGroupServer(oldName,newName,function(result){var contactObjx={};for(var key in tmpContact)if(contact[key]!=tmpContact[key])contactObjx[key]=contact[key];delete contactObjx.rendez_vous;delete contactObjx.id;delete contactObjx.date;contactObjx.list=newName;if(!isEmpty(contactObjx)){ContactsService.updateContactServer(0,contactId,contactObjx,function(data){if(data.update.status=="done"){LoadingService.dismiss();console.info($rootScope.contactTmp);if(!areTheSame($rootScope.tmpContact,contact))MenuService.setLocalStorage("ReloadContactList",1);$ionicViewSwitcher.nextDirection("back");$state.go("app.contactShow",{id:contactId},{reload:true})}else{LoadingService.error("Une erreur est survenue lors <br> de la synchronisation","ContactEditController")}},function(status){console.error(status);LoadingService.error("Une erreur réseau est survenue ","ContactEditController")})}else{LoadingService.dismiss();console.info($rootScope.contactTmp);if(!areTheSame($rootScope.tmpContact,contact))MenuService.setLocalStorage("ReloadContactList",1);$ionicViewSwitcher.nextDirection("back");$state.go("app.contactShow",{id:contactId},{reload:true})}})}else if($scope.contact.list=="Nouveau Groupe"&&checkIfExist(newName,$scope.groups)){LoadingService.error("Ce nom de groupe existe déjà","ContactEditController")}else if(oldName!="Nouveau Groupe"&&(newName==""&&oldName==null||newName==oldName)){var contactObjx={};for(var key in tmpContact)if(contact[key]!=tmpContact[key])contactObjx[key]=contact[key];delete contactObjx.rendez_vous;delete contactObjx.id;delete contactObjx.date;if(newName!=oldName)contactObjx.list=newName;console.warn(contactObjx);if(!isEmpty(contactObjx)){ContactsService.updateContactServer(0,contactId,contactObjx,function(data){if(data.update.status=="done"){LoadingService.dismiss();console.info($rootScope.tmpContact);if(!areTheSame($rootScope.tmpContact,contact))MenuService.setLocalStorage("ReloadContactList",1);$ionicViewSwitcher.nextDirection("back");$state.go("app.contactShow",{id:contactId},{reload:true})}else{LoadingService.error("Une erreur est survenue lors <br> de la synchronisation","ContactEditController")}},function(status){console.error(status);LoadingService.error("Une erreur réseau est survenue ","ContactEditController")})}else{LoadingService.dismiss();console.info($rootScope.tmpContact);console.info(contact);if(!areTheSame($rootScope.tmpContact,contact))MenuService.setLocalStorage("ReloadContactList",1);$ionicViewSwitcher.nextDirection("back");$state.go("app.contactShow",{id:contactId},{reload:true})}}},function(){if(contact.id.toString().length==10){if(!areTheSame($rootScope.tmpContact,contact))MenuService.setLocalStorage("ReloadContactList",1);$ionicViewSwitcher.nextDirection("back");$state.go("app.contactShow",{id:contactId},{reload:true})}else{LoadingService.loading("Enregistrement du contact en cours...");if(oldName==null)oldName="";var contactObjx={};for(var key in tmpContact)if(contact[key]!=tmpContact[key])contactObjx[key]=contact[key];delete contactObjx.rendez_vous;delete contactObjx.id;delete contactObjx.date;contactObjx.list=newName;if(oldName!="Nouveau Groupe"&&oldName!=newName&&newName!=""){SynchroServices.insertRequest(db,"RENAMEGROUP",{newName:newName,oldName:oldName},function(result){if(!isEmpty(contactObjx)){console.info("not emptyy");SynchroServices.insertRequest(db,"CONTACTEDIT",{id:$stateParams.id,contact:contactObjx},function(result){LoadingService.dismiss();if(!areTheSame($rootScope.tmpContact,contact))MenuService.setLocalStorage("ReloadContactList",1);$ionicViewSwitcher.nextDirection("back");$state.go("app.contactShow",{id:contactId},{reload:true})})}else{LoadingService.dismiss();if(!areTheSame($rootScope.tmpContact,contact))MenuService.setLocalStorage("ReloadContactList",1);$ionicViewSwitcher.nextDirection("back");$state.go("app.contactShow",{id:contactId},{reload:true})}})}else if(!isEmpty(contactObjx)){SynchroServices.insertRequest(db,"CONTACTEDIT",{id:$stateParams.id,contact:contactObjx},function(result){LoadingService.dismiss();if(!areTheSame($rootScope.tmpContact,contact))MenuService.setLocalStorage("ReloadContactList",1);$ionicViewSwitcher.nextDirection("back");$state.go("app.contactShow",{id:contactId},{reload:true})})}else{LoadingService.dismiss();if(!areTheSame($rootScope.tmpContact,contact))MenuService.setLocalStorage("ReloadContactList",1);$ionicViewSwitcher.nextDirection("back");$state.go("app.contactShow",{id:contactId},{reload:true})}}})}};$scope.deleteContact=function(){LoadingService.question("Voulez-vous vraiment supprimer ce contact ?",$stateParams.id,"ContactEditController")};$scope.no=function(){LoadingService.dismiss()};$scope.yes=function(params){ContactsService.deleteContactLocal(db,params,function(){ContactsService.selectContactByGroupName(db,$rootScope.oldGroupName,function(result){if(result.rows.length==0){ContactsService.deleteGroupByName(db,$rootScope.oldGroupName,function(result){console.log("group is empty : deleted")})}})});ConnectionService.isConnected(db,function(){LoadingService.loading("Suppression du contact en cours...");ContactsService.deleteContactServer(params,function(data){if(data.update.status=="done"){LoadingService.dismiss();MenuService.setLocalStorage("ReloadContactList",1);$state.go("app.contactList")}else{LoadingService.error("Une erreur est survenue lors <br> de la synchronisation","ContactEditController")}},function(status){console.error(status);LoadingService.error("Une erreur réseau est survenue ","ContactEditController")})},function(){SynchroServices.insertRequest(db,"CONTACTDELETE",{id:$stateParams.id},function(){LoadingService.dismiss();MenuService.setLocalStorage("ReloadContactList",1);$state.go("app.contactList")})})};function toTimeStamp(myDate){myDate=myDate.split("-");var newDate=myDate[1]+"/"+myDate[0]+"/"+myDate[2];x=new Date(newDate).getTime()/1e3;return x}$scope.getPhoto=function(){var options={quality:100,destinationType:Camera.DestinationType.FILE_URI,sourceType:Camera.PictureSourceType.CAMERA,encodingType:Camera.EncodingType.JPEG,targetWidth:500,targetHeight:500,correctOrientation:true,popoverOptions:CameraPopoverOptions};cameraService.getPicture(options).then(function(imageURI){LoadingService.loading("Chargement...");var isWindowsPhone=ionic.Platform.isWindowsPhone();var fileName=$stateParams.id+".jpg";$scope.photoProfil=imageURI;var imageURL=imageURI.substr(0,imageURI.lastIndexOf("?"));if(imageURL==""){imageURL=imageURI}else{imageURL=imageURI.substr(0,imageURI.lastIndexOf("?"))}cameraService.RenamePicture(fileName,imageURL,function(url){if(isWindowsPhone){$scope.photoProfil=url;$scope.contact.photofilelocation=url}else{$scope.photoProfil=url+"?"+(new Date).getTime();$scope.contact.photofilelocation=url+"?"+(new Date).getTime()}ContactsService.updateContactPhoto(db,$stateParams.id,url,function(){ConnectionService.isConnected(db,function(){ContactsService.uploadPhotoContact(url,$stateParams.id,function(){LoadingService.dismiss();console.log("uploaded CONTACTPHOTO")},function(){LoadingService.dismiss();console.log("erreur upload photo contact")})},function(){SynchroServices.insertRequest(db,"CONTACTPHOTO",{id:$stateParams.id,path:url},function(){LoadingService.dismiss();console.log("Request inserted CONTACTPHOTO")})})})})},function(err){console.error(err)})};$scope.choseFile=function(){var options={quality:100,destinationType:Camera.DestinationType.FILE_URI,sourceType:Camera.PictureSourceType.PHOTOLIBRARY,encodingType:Camera.EncodingType.JPEG,targetWidth:500,targetHeight:500,correctOrientation:true,popoverOptions:CameraPopoverOptions};cameraService.getPicture(options).then(function(imageURI){LoadingService.loading("Chargement...");var isWindowsPhone=ionic.Platform.isWindowsPhone();var fileName=$stateParams.id+".jpg";$scope.photoProfil=imageURI;var imageURL=imageURI.substr(0,imageURI.lastIndexOf("?"));if(imageURL==""){imageURL=imageURI}else{imageURL=imageURI.substr(0,imageURI.lastIndexOf("?"))}cameraService.RenamePicture(fileName,imageURL,function(url){if(isWindowsPhone){$scope.photoProfil=url;$scope.contact.photofilelocation=url}else{$scope.photoProfil=url+"?"+(new Date).getTime();$scope.contact.photofilelocation=url+"?"+(new Date).getTime()}ContactsService.updateContactPhoto(db,$stateParams.id,$scope.photoProfil,function(){ConnectionService.isConnected(db,function(){ContactsService.uploadPhotoContact(url,$stateParams.id,function(){LoadingService.dismiss();console.log("uploaded CONTACTPHOTO")},function(){console.log("erreur upload photo contact")})},function(){SynchroServices.insertRequest(db,"CONTACTPHOTO",{id:$stateParams.id,path:url},function(){LoadingService.dismiss();console.log("Request inserted CONTACTPHOTO")})})})})},function(err){console.error(err)})};$scope.changeHandler=function(){if($scope.contact.list!="Nouveau Groupe"){document.querySelector("#newGroupeName").value=$scope.contact.list}else{$scope.isFocusable=true;document.querySelector("#groupe-combo-editcontact").style.height="80px";document.querySelector("#newGroupeName").value=""}};$scope.dismiss=function(){LoadingService.dismiss()};function checkIfExist(string,array){if(string!=""&&array.length>0){var exist=false;for(var int=0;int<array.length;int++){if(array[int]==string)exist=true}return exist}else return false}function isEmpty(value){return Boolean(value&&typeof value=="object")&&!Object.keys(value).length}function toUsFormat(dateTimeStamp){var n=new Date(dateTimeStamp.substr(6,4),parseInt(dateTimeStamp.substr(3,2))-1,dateTimeStamp.substr(0,2));var x=n.getMonth()+1+"/"+n.getDate()+"/"+n.getFullYear();console.error(x);return n.getMonth()+1+"/"+n.getDate()+"/"+n.getFullYear()}function areTheSame(obj1,obj2){var d1=new Date(obj1.rendez_vous*1e3);var d2=new Date(obj2.rendez_vous);console.log(d1);console.log(d2);if(d1.getTime()!=d2.getTime()){console.log("d1 is not d2");return false}else{delete obj1.rendez_vous;delete obj2.rendez_vous;console.error(obj1);if(JSON.stringify(obj1)===JSON.stringify(obj2)){console.log("obj1 ==== D2");return true}else{console.log("d1 ==@##=== D2");return false}}}}]);