appContext.controller('BuzcardSendController', ['$cordovaDatePicker','$scope', 'MenuService', 'BuzcardService', 'LoadingService', '$filter', 'ContactsService', '$state', '$ionicPlatform', '$cordovaSQLite', '$ionicHistory', '$rootScope', 'cameraService', 'ConnectionService', 'SynchroServices', function($cordovaDatePicker, $scope, MenuService, BuzcardService, LoadingService, $filter, ContactsService, $state, $ionicPlatform, $cordovaSQLite, $ionicHistory, $rootScope, cameraService, ConnectionService, SynchroServices) {


    if (MenuService.getLocalStorage("customisation")) {
        var custoArray = MenuService.getLocalStorage("customisation");
        $scope.secondColor = "1px solid " + custoArray[4];
        $scope.firstColor = custoArray[3];
    }
    var db = null;

    $scope.photoContact = null;
    $ionicPlatform.ready(function() {
        /**
         * create/open DB
         */
        if (window.cordova) {
            db = $cordovaSQLite.openDB("buzcard.db"); // device
        } else {
            db = window.openDatabase("buzcard.db", '1', 'my', 1024 * 1024 * 10); // browser
        }

        $scope.email = "";
        
        $scope.dateRDV= $filter('date')(new Date(), 'dd/MM/yy');
        $scope.selectLang = 'fr';
        

        $scope.checkFollower = true;
    });
    
//    $scope.dateChange = function(dateRDV){
//    	alert(dateRDV);
//    	if (dateRDV == null) {
//    		$scope.dateRDV=  new Date();
//		} else {
//			$scope.dateRDV =  new Date(dateRDV);
//		}
//    	
//    };
    $scope.sendBuzcard = function(email, selectLang, checkFollower, dateRDV) {
    	
    	 dateRDV = $('#datepickerDirective').val();
    	 var dateRDVT = new Date(dateRDV.substr(6,4),dateRDV.substr(3,2),dateRDV.substr(0,2));
    	
    	 MenuService.setLocalStorage('ReloadContactList', 1);
        var checkFollowerValue = '';
        if (checkFollower) {
            checkFollowerValue = 'on';
        } else {
            checkFollowerValue = 'off';
        }
//       alert(dateRDV);
        var dateRDVValue = "";
        if (dateRDV == '' || dateRDV == null) {
            dateRDVValue = $filter('date')(new Date(), 'dd/MM/yyyy');
        } else {
            dateRDVValue = $filter('date')(dateRDV, 'dd/MM/yyyy');
        }
//        alert(dateRDVValue);
        if (typeof email === null || email =='') {
            LoadingService.error("Entrez l'adresse email de votre interlocuteur.", "BuzcardSendController");

        } else if (!validateEmail(email)) {

            LoadingService.error("L\'adresse email saisie est invalide", "BuzcardSendController");
        } else {
        	
            ConnectionService.isConnected(db, function() {
            	//************* cas connecté ********************** 
                LoadingService.loading("Envoi de votre buzcard en cours ");

                if (typeof selectLang === 'undefined' || typeof selectLang === null)
                    selectLang = "fr";
                BuzcardService.sendBuzcardToServer(email, selectLang, checkFollowerValue, dateRDVValue, function() {
                    console.warn("send ok--+++-");
                    //check if email exist in data base
                    ContactsService.selectContactbyEmail(db, email, function(result) {
                        LoadingService.loading('Chargement de la fiche en cours...');
                        console.warn("select contact from db ok---");
                        if (result.rows.length == 0) {
                            //get contact from server
                            ContactsService.getContactFromServerByEmail(email, function(contact) {
                                //insert contact into db
                            	
                            	contact.photofilelocation ='img/photo_top_title.jpg';
                                ContactsService.insertIntoContactsTable(db, contact, function() {
                                    //save photo when get photo from camera buzcard send dans le cas d'un nouveau email
                                    if ($scope.photoContact != null) {

                                        var idProfil = $rootScope.idProfil;
                                        var fileName =  contact.id + '.jpg';

                                        cameraService.RenamePicture(fileName, $scope.photoContact, function(url) {
                                            ContactsService.updateContactPhoto(db, contact.id, url, function() {
                                                ContactsService.uploadPhotoContact(url, contact.id, function() {
                                                    LoadingService.confirm("Votre buzcard a bien été envoyée à <br><font style='font-style: normal;color:#79A436'> " + email + "<br></font>Vous pouvez compléter sa fiche et l\'affecter à un groupe", contact.id, "BuzcardSendController");
                                                   
                                                }, function() {
                                                    console.log('erreur upload photo contact');
                                                });
                                            });
                                        });
                                    } else {
                                        LoadingService.confirm("Votre buzcard a bien été envoyée à <br><font style='font-style: normal;color:#79A436'> " + email + "</font><br>Vous pouvez compléter sa fiche et l\'affecter à un groupe", contact.id, "BuzcardSendController");
                                    }


                                });

                            }, function() {
                                //get contact from server error
                            });
                        } else {
                            console.warn("contact already exist");                          
                            var dateRdvTimeStamp = parseInt(dateRDVT.getTime() / 1000);
                            ContactsService.updateContactLastSendAndLanguageRdv(db, result.rows.item(0).id, extractLang(selectLang), dateRdvTimeStamp, function(resX) {
                                console.log("#### resx ##### " + JSON.stringify(resX.rows.item(0)) + " ######");
                                ContactsService.updateContactStatus(db, result.rows.item(0).id, checkFollowerValue, function() {
                                    //save photo camera dans le cas d'un email existant 
                                    if ($scope.photoContact != null) {

                                        var idProfil = $rootScope.idProfil;
                                        var fileName =  result.rows.item(0).id + '.jpg';

                                        cameraService.RenamePicture(fileName, $scope.photoContact, function(url) {
                                            ContactsService.updateContactPhoto(db, result.rows.item(0).id, url, function() {
                                                ContactsService.uploadPhotoContact(url, result.rows.item(0).id, function() {
                                                    console.log('uploaded CONTACTPHOTO');
                                                    LoadingService.confirm("Votre buzcard a bien été envoyée à <br><font style='font-style: normal;color:#79A436'> " + email + "<br></font>Vous pouvez compléter sa fiche et l\'affecter à un groupe", result.rows.item(0).id, "BuzcardSendController");

                                                }, function() {
                                                    console.log('erreur upload photo contact');
                                                });

                                            });
                                        });
                                    } else {
                                        LoadingService.confirm("Votre buzcard a bien été envoyée à <br><font style='font-style: normal;color:#79A436'> " + email + "<br></font>Vous pouvez compléter sa fiche et l\'affecter à un groupe", result.rows.item(0).id, "BuzcardSendController");

                                    }
                                });
                            });
                        }

                    });

                }, function(thrownError) {
                	console.log('erreur send buzcard'+JSON.stringify(thrownError));
                    LoadingService.error("Une erreur réseau est survenue", "BuzcardSendController");
                });



            }, function() {
                LoadingService.loading("Une fois que vous retrouverez du réseau, cliquez sur \"Synchroniser\" pour que votre buzcard soit bien envoyée à <font style='font-style: normal;color:#79A436'> " + email + "</font> ");
              //************* cas non connecté ********************** 
                var object = {
                    email: email,
                    selectLang: selectLang,
                    checkFollower: checkFollowerValue,
                    dateRDV: dateRDVValue
                };
                SynchroServices.insertRequest(db, "BUZCARDSEND", object, function() {
                    ContactsService.selectContactbyEmail(db, email, function(result) {
                    	//************* mode offline & nouveau contact  ********************** 
                        if (result.rows.length == 0) {
                            //insert contact into db
                            var idTmp = parseInt(new Date().getTime() / 1000);

                            var status = "";
                            if (checkFollowerValue == "on") {
                                status = "selected";
                            } else {
                                status = "cant_be_selected";
                            }
                            var contactObj = {
                                id: idTmp,
                                email: email,
                                date: idTmp,
                                rendez_vous: toUsFormat(dateRDVValue),
                                comment: "",
                                last_name: "",
                                first_name: "",
                                phone_1: "",
                                phone_2: "",
                                company: "",
                                list: "",
                                status: status,
                                firstsendemail: $filter('date')(new Date(), 'MM/dd/yyyy hh:mm'),
                                lastsendemail: "",
                                photofilelocation: "img/photo_top_title.jpg",
                                LanguageText: extractLang(selectLang)
                            };
                           
                            console.log("#### do not exist ##### " + JSON.stringify(contactObj) + " ######");
                            ContactsService.insertIntoContactsTable(db, contactObj, function() {
                                if ($scope.photoContact != null) {

                                    var idProfil = $rootScope.idProfil;
                                    var fileName = idTmp + '.jpg';

                                    cameraService.RenamePicture(fileName, $scope.photoContact, function(url) {
                                        ContactsService.updateContactPhoto(db, contactObj.id, url, function() {
                                           // LoadingService.confirm("Votre buzcard sera envoyée à<br><font style='font-style: normal;color:#79A436'>" + email + "<br></font>dès que vous aurez à nouveau du réseau", idTmp, "BuzcardSendController");
                                            LoadingService.confirm("Une fois que vous retrouverez du réseau, cliquez sur \"Synchroniser\" pour que votre buzcard soit bien envoyée à <font style='font-style: normal;color:#79A436'> " + email + "</font> ", idTmp, "BuzcardSendController");
                                            
                                        });
                                    });
                                } else {
                                	  LoadingService.confirm("Une fois que vous retrouverez du réseau, cliquez sur \"Synchroniser\" pour que votre buzcard soit bien envoyée à  <font style='font-style: normal;color:#79A436'>" + email + "</font> ", idTmp, "BuzcardSendController");
                                      
                                }
                            });
                        } else {
                            //************* mode offline & contact exist deja ********************** 
                            contactX = {
                                id: result.rows.item(0).id,
                                rendez_vous: $filter('date')(new Date(dateRDV), 'MM/dd/yyyy'),
                                lastsendemail: $filter('date')(new Date(), 'MM/dd/yyyy hh:mm'),
                                LanguageText: extractLang(selectLang)
                            };
                            console.log("#### exist ##### " + JSON.stringify(contactX) + " ######");
                            console.log($scope.photoContact);
                            if ($scope.photoContact != null) {
                            	console.log("eeeeeeeee if");
                                var idProfil = $rootScope.idProfil;
                                var fileName =  contactX.id + '.jpg';
                                console.log("aaaaaaa "+fileName+ " aaaaaaaaa");
                                cameraService.RenamePicture(fileName, $scope.photoContact, function(url) {
                                    ContactsService.updateContactPhoto(db, contactX.id, url, function() {
                                        ContactsService.updateContactInfoNew(db, contactX, function() {
                                            delete contactX.id;
                                            delete contactX.rendez_vous;
                                            delete contactX.lastsendemail;
                                            SynchroServices.insertRequest(db, "CONTACTEDIT", {
                                                id: result.rows.item(0).id,
                                                contact: contactX
                                            }, function() {
                                            	  LoadingService.confirm("Une fois que vous retrouverez du réseau, cliquez sur \"Synchroniser\" pour que votre buzcard soit bien envoyée à <font style='font-style: normal;color:#79A436'>" + email + "</font> ", idTmp, "BuzcardSendController");
                                                     });

                                        });

                                    });
                                });
                            } else {
                            	console.log("eeeeeeeee else");
                                ContactsService.updateContactInfoNew(db, contactX, function() {
                                    delete contactX.id;
                                    delete contactX.rendez_vous;
                                    delete contactX.lastsendemail;
                                    SynchroServices.insertRequest(db, "CONTACTEDIT", {
                                        id: result.rows.item(0).id,
                                        contact: contactX
                                    }, function() {
                                      //  LoadingService.confirm("Votre buzcard sera envoyée à<br><font style='font-styles: normal;color:#79A436'>" + email + "<br></font>dès que vous aurez à nouveau du réseau", result.rows.item(0).id, "BuzcardSendController");
                                    	  LoadingService.confirm("Une fois que vous retrouverez du réseau, cliquez sur \"Synchroniser\" pour que votre buzcard soit bien envoyée à  <font style='font-style: normal;color:#79A436'>" + email + "</font> ", idTmp, "BuzcardSendController");
                                          
                                    });

                                });
                            }



                        }
                    });
                });
            });
        }

    };

    // to dismiss the PopUp
    $scope.ok = function(id) {
        LoadingService.dismiss();

        $state.go("app.contactEdit", {
            'id': id
        });
    };
    // to dismiss the PopUp
    $scope.dismiss = function() {
        LoadingService.dismiss();
    };
    //capture photo buzcard send 

    $scope.getPhoto = function() {
      //  LoadingService.loading("");
        var options = {
            quality: 100,
            destinationType: Camera.DestinationType.FILE_URI,
            sourceType: Camera.PictureSourceType.CAMERA,
            encodingType: Camera.EncodingType.JPEG,
            targetWidth: 500,
            targetHeight: 500,
            correctOrientation: true,
            popoverOptions: CameraPopoverOptions
        };
        cameraService.getPicture(options).then(function(imageURI) {
            // var fileName = $scope.infos.id + '/portrait.jpg';
            $scope.photoContact = imageURI;
            LoadingService.success('La photo a bien été enregistrée ','BuzcardSendController');
            ///LoadingService.dismiss();
        }, function(err) {
            console.error(err);
            LoadingService.dismiss();
        });
    };

    
    $scope.keyPressed = function(keyEvent) {
    
   		  if (keyEvent.keyCode == 13 || keyEvent.keyCode == KeyEvent.KEYCODE_BACK) {
       	 
          cordova.plugins.Keyboard.close();
   		  }
   	
    };
    
    function toUsFormat(date) {
        console.warn("initial date : " + date)
        var array = date.split("/");
        var dateTmp = array[1] + "/" + array[0] + "/" + array[2];
        console.log("new format : " + dateTmp);
        return dateTmp;
    }

    function validateEmail(email) {
        var re = /^([\w-]+(?:\.[\w-]+)*)@((?:[\w-]+\.)*\w[\w-]{0,66})\.([a-z]{2,6}(?:\.[a-z]{2})?)$/i;
        return re.test(email);
    }

    function extractLang(lang) {	
        try {
    	    var elt = document.getElementById("selectLangId");

    	    if (elt.selectedIndex == -1)
    	        return null;

    	    return elt.options[elt.selectedIndex].text.split("/")[0];
        } catch (e) {
        	var elt = document.getElementById("selectLangId");
            return elt.options[elt.selectedIndex].text;
        }

    }

}]);