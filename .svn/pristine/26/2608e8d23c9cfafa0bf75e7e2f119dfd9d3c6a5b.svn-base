// Ionic Starter App

// angular.module is a global place for creating, registering and retrieving
// Angular modules
// 'starter' is the name of this angular module example (also set in a <body>
// attribute in index.html)
// the 2nd parameter is an array of 'requires'
var appContext = angular.module('appContext', ['ionic','ngCordova'])
//rendre l'object state publique : $rootScope, $state, $stateParams
.run(function($ionicPlatform, $rootScope,$state) {

  $rootScope.$state = $state;

    $ionicPlatform.ready(function() {
      /**
       * Hide the accessory bar by default (remove this to show the accessory bar
       * above the keyboard
       * for form inputs)
       */
      if (window.cordova && window.cordova.plugins.Keyboard) {
        cordova.plugins.Keyboard.hideKeyboardAccessoryBar(true);
      }
      if (window.StatusBar) {
        StatusBar.styleDefault();
      }
//scroll problem
//      ionic.Platform.isFullScreen = true;

    });

}).config(function($stateProvider, $urlRouterProvider,$httpProvider,$compileProvider,$ionicConfigProvider) {
  
	if(!ionic.Platform.isIOS())$ionicConfigProvider.scrolling.jsScrolling(false);
	 if (ionic.Platform.isAndroid()) {
	      $ionicConfigProvider.scrolling.jsScrolling(false);
	    }

  $httpProvider.defaults.withCredentials = true;
  
  $compileProvider.imgSrcSanitizationWhitelist(/^\s*(https?|ftp|mailto|file|tel):/);
  

  $stateProvider
  .state('app', {
	    url: "/app",
	    abstract: true,
	    templateUrl: "app/menu/menu.html",
	    controller: 'MenuController',
	    
	  })
	  .state('app.loading', {
    url: '/loading',
    views: {
        'menuContent': {
        	templateUrl: 'app/startup/partials/loading.html',
        	 controller: 'LoadingController',
        	
        }
    },
    data: {
	      requireLogin: false
	    }
  }).state('app.login', {
    url: '/login',
    views: {
        'menuContent': {
        	templateUrl: 'app/login/partials/Login.html',
        	 controller: 'LoginController',
        	
        }
    },
    data: {
	      requireLogin: false
	    }
  }).state('app.synchro', {
    url: '/synchro',
    views: {
        'menuContent': {
        	 templateUrl: 'app/synchro/partials/Synchronisation.html',
        	 controller: 'SynchroController',
        }
    },
    data: {
      requireLogin: true
    }
}).state('app.buzcard', {
    url: '/buzcard',
    cache: false,
    views: {
        'menuContent': {
        	 templateUrl: 'app/buzcard/partials/Buzcard.html',
        	    controller: 'BuzcardController'
        	    }
    },
   data: {
      requireLogin: true
    }
  }).state('app.buzcardEdit', {
    url: '/buzcardEdit',
    cache: false,
    views: {
        'menuContent': {
        	 templateUrl: 'app/buzcard/partials/BuzcardEdit.html',
        	    controller: 'BuzcardEditController'
        	    }
    },
   
    data: {
      requireLogin: true
    }
  }).state('app.buzcardSend', {
	    url: '/buzcardSend',
	    cache: false,
	    views: {
	        'menuContent': {
	        	  templateUrl: 'app/buzcard/partials/BuzcardSend.html',
	      	    controller: 'BuzcardSendController'
	        	    }
	    },
	    data: {
	      requireLogin: true
	    }
	  }).state('app.contactList', {
    url: '/contactList',
    cache: false,
    views: {
        'menuContent': {
        	 templateUrl: 'app/contacts/partials/ContactsList.html',
        	    controller: 'ContactListController'
        	    }
    },
    data: {
      requireLogin: true
    }
  }).state('app.creditParrainage', {
	    url: '/creditParrainage',
	    cache: false,
	    views: {
	        'menuContent': {
	        	 templateUrl: 'app/parrainage/partials/creditParrainage.html',
	        	    controller: 'creditParrainageController'
	        	    }
	    },
	    data: {
	      requireLogin: true
	    }
	  }).state('app.contactEdit', {
	    url: '/contactEdit/{id:int}',
	    cache: false,
	    views: {
	        'menuContent': {
	        	 templateUrl: 'app/contacts/partials/ContactEdit.html',
	     	    controller: 'ContactEditController'
	        	    }
	    },
	    data: {
	      requireLogin: true
	    }
 }).state('app.contactShow', {
		    url: '/contactShow/{id:int}',
		    cache: false,
		    views: {
		        'menuContent': {
		        	  templateUrl: 'app/contacts/partials/ContactShow.html',
		  		    controller: 'ContactShowController'
		        	    }
		    },
		    data: {
		      requireLogin: true
		    }
     }).state('app.commandes', {
    url: '/commandes',
    cache: false,
    views: {
        'menuContent': {
        	templateUrl: 'app/commandes/partials/Commandes.html',
            controller: 'CommandesController'
        	    }
    },
    data: {
      requireLogin: true
    }
  }).state('app.qrcode', {
	url: '/qrcode',
	 views: {
	        'menuContent': {
	        	templateUrl: 'app/qrcode/partials/QrCode.html',
	        	controller: 'QrCodeController'
	        	    }
	    },
	    data: {
	      requireLogin: true
	    }
  });

  $urlRouterProvider.otherwise('/app/loading');
})
.filter('escape', function() {
  return function(input) {
    if (input) 
    return input.replace(/#A#/g, '\'')
                .replace(/#AA#/g, '\"');
                 
  };
});
/**
 * special character escape
 */
function addSlashes(string) {
  try {
    if (typeof string !== 'undefined') 
      return string
//                    .replace(/\\/g, '\\\\')
//                    .replace(/\u0008/g, '\\b')
//                    .replace(/\t/g,'\\t')
//                    .replace(/\n/g, '\\n')
//                    .replace(/\f/g, '\\f')
//                    .replace(/\r/g,'\\r')
                    .replace(/'/g, '\#A#')
                    .replace(/"/g, '\#AA#');
      else 
        return "";
  } catch (e) {
    console.error("---- error -----");
    console.error(e);
    return string;
  }

};
/**
 * 
 * @param input
 * @returns
 */
function removeSlashes(input) {
    if (typeof input !== 'undefined') 
    return input.replace(/#A#/g, '\'')
                .replace(/#AA#/g, '\"');
    else return "";             
  };
  
